//Scaffold  new empty view
dotnet-aspnet-codegenerator view Default Empty -outDir ./Pages/Shared/Components/RestaurantCount/


dotnet tool uninstall --global dotnet-aspnet-codegenerator
dotnet tool install --global dotnet-aspnet-codegenerator
dotnet tool uninstall --global dotnet-ef
dotnet tool install --global dotnet-ef
dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet add package Microsoft.EntityFrameworkCore.SQLite
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
dotnet add package Microsoft.EntityFrameworkCore.SqlServer

//Scaffold CRUD razor example (empty razor page named "ClientRestaurants" with autogenerated pagemodel)
dotnet-aspnet-codegenerator razorpage ClientRestaurants Empty -outDir ./Pages/Restaurants/

//Scaffold CRUD api
dotnet-aspnet-codegenerator controller -api -name RestaurantsController --model OdeToFood.Core.Restaurant --dataContext OdeToFood.Data.OdeToFoodDbContext


//datatables.net

// add package.json file
 npm init

 //certificate error
 npm config set strict-ssl false

//add nuget package to automatically serve node modules
 OdeToCode.UseNodeModules

 //run from project folder
 dotnet run

 //todo figure out how to use watch in launch.json
 
 //resolve "cannot bind to port" error
 //find then kill pids that are using that port
 lsof -i:[Portnumber]
 kill -9 [PID]

//publish options
 dotnet publish --help

 //publish to local folder (using runtime on server)
 dotnet publish -o /home/hanifw/SourceControl/tempOdeToFood
 //publish app with it's own runtime
 dotnet publish -o ~/SourceControl/tempOdeToFood/  --self-contained -r linux-x64


 //Install on IIS server https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/?view=aspnetcore-6.0
 //Ensure ASPNetCoreModule is installed on IIS
 //add site
 //bind to port 443, select ssl 